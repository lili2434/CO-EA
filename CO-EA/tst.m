% 
%25-C101
% cus.xc = [45,45,42,42,42,40,40,38,38,35,35,25,22,22,20,20,18,15,15,30,30,28,28,25,25];%x坐标
% cus.yc = [68,70,66,68,65,69,66,68,70,66,69,85,75,85,80,85,75,75,80,50,52,52,55,50,52];%y坐标
% cus.u= [10,30,10,10,10,20,20,20,10,10,10,20,30,10,40,40,20,20,10,10,20,20,10,10,40]; %初始需求miu
% cus.earlyt= [912,825,65,727,15,621,170,255,534,357,448,652,30,567,384,475,99,179,278,10,914,812,732,65,169]; %最早开始时间
% cus.latet = [967,870,146,782,67,702,225,324,605,410,505,721,92,620,429,528,148,254,345,73,965,883,777,144,224]; %最晚开始时间
% cus.servicet =[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90];%服务时间
%25-C201
% cus.xc = [52,45,62,60,42,16,58,34,28,35,35,25,22,22,20,20,18,15,15,30,30,28,14,25,22];%x坐标
% cus.yc = [75,70,69,66,65,42,70,60,70,66,69,85,75,85,80,85,75,75,80,50,56,52,66,50,66];%y坐标
% cus.u= [10,30,10,10,10,20,20,20,10,10,10,20,30,10,40,40,20,20,10,10,20,20,10,10,40]; %初始需求miu
% cus.earlyt= [311,213,1167,1261,25,497,1073,2887,2601,2791,2698,2119,2405,2026,2216,1934,2311,1742,1837,10,2983,22,1643,116,2504]; %最早开始时间
% cus.latet = [471,373,1327,1421,185,657,1233,3047,2761,2951,2858,2279,2565,2186,2376,2094,2471,1902,1997,170,3143,182,1803,276,2664]; %最晚开始时间
% cus.servicet =[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90];%服务时间
%25-R101----------注意C和R和RC的仓库位置不一样-------邻域大小也不太一样
cus.xc = [41,35,55,55,15,25,20,10,55,30,20,50,30,15,30,10,5,20,15,45,45,45,55,65,65];%x坐标
cus.yc = [49,17,45,20,30,30,50,43,60,60,65,35,25,10,5,20,30,40,60,65,20,10,5,35,20];%y坐标
cus.u= [10,7,13,19,26,3,5,9,16,16,12,19,23,20,8,19,2,12,17,9,11,18,29,3,6]; %初始需求miu
cus.earlyt= [161,50,116,149,34,99,81,95,97,124,67,63,159,32,61,75,157,87,76,126,62,97,68,153,172]; %最早开始时间
cus.latet = [171,60,126,159,44,109,91,105,107,134,77,73,169,42,71,85,167,97,86,136,72,107,78,163,182]; %最晚开始时间
cus.servicet =[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10];%服务时间
% %25-R201
% cus.xc = [41,35,55,55,15,25,20,10,55,30,20,50,30,15,30,10,5,20,15,45,45,45,55,65,65];%x坐标
% cus.yc = [49,17,45,20,30,30,50,43,60,60,65,35,25,10,5,20,30,40,60,65,20,10,5,35,20];%y坐标
% cus.u= [10,7,13,19,26,3,5,9,16,16,12,19,23,20,8,19,2,12,17,9,11,18,29,3,6]; %初始需求miu
% cus.earlyt= [707,143,527,678,34,415,331,404,400,577,206,228,690,32,175,272,733,377,269,581,214,409,206,704,817]; %最早开始时间
% cus.latet = [848,282,584,801,209,514,410,481,497,632,325,345,827,243,300,373,870,434,378,666,331,494,325,847,956]; %最晚开始时间
% cus.servicet =[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10];%服务时间
%25-RC101
% cus.xc = [25,22,22,20,20,18,15,15,10,10,8,8,5,5,2,0,0,44,42,42,40,40,38,38,35];%x坐标
% cus.yc = [85,75,85,80,85,75,75,80,35,40,40,45,35,45,40,40,45,5,10,15,5,15,5,15,5];%y坐标
% cus.u= [20,30,10,40,20,20,20,10,20,30,40,20,10,10,20,20,20,20,40,10,10,40,30,10,20]; %初始需求miu
% cus.earlyt= [145,50,109,141,41,95,79,91,91,119,59,64,142,35,58,72,149,87,72,122,67,92,65,148,154]; %最早开始时间
% cus.latet = [175,80,139,171,71,125,109,121,121,149,89,94,172,65,88,102,179,117,102,152,97,122,95,178,184]; %最晚开始时间
% cus.servicet =[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10];%服务时间
% %25-RC201
% cus.xc = [25,22,22,20,20,18,15,15,10,10,8,8,5,5,2,0,0,44,42,42,40,40,38,38,35];%x坐标
% cus.yc = [85,75,85,80,85,75,75,80,35,40,40,45,35,45,40,40,45,5,10,15,5,15,5,15,5];%y坐标
% cus.u= [20,30,10,40,20,20,20,10,20,30,40,20,10,10,20,20,20,20,40,10,10,40,30,10,20]; %初始需求miu
% cus.earlyt= [673,152,471,644,73,388,300,367,371,519,195,223,653,35,174,255,703,335,254,537,215,375,201,681,784]; %最早开始时间
% cus.latet = [793,272,591,764,193,508,420,487,491,639,315,343,773,155,294,375,823,455,374,657,335,495,321,801,904]; %最晚开始时间
% cus.servicet =[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10];%服务时间
% %50-C101
% cus.xc = [45,45,42,42,42,40,40,38,38,35,35,25,22,22,20,20,18,15,15,30,30,28,28,25,25,25,23,23,20,20,10,10,8,8,5,5,2,0,0,35,35,33,33,32,30,30,30,28,28,26];%x坐标
% cus.yc = [68,70,66,68,65,69,66,68,70,66,69,85,75,85,80,85,75,75,80,50,52,52,55,50,52,55,52,55,50,55,35,40,40,45,35,45,40,40,45,30,32,32,35,30,30,32,35,30,35,32];%y坐标
% cus.u= [10,30,10,10,10,20,20,20,10,10,10,20,30,10,40,40,20,20,10,10,20,20,10,10,40,10,10,20,10,10,20,30,40,20,10,10,20,30,20,10,10,20,10,10,10,30,10,10,10,10]; %初始需求miu
% cus.earlyt= [912,825,65,727,15,621,170,255,534,357,448,652,30,567,384,475,99,179,278,10,914,812,732,65,169,622,261,546,358,449,200,31,87,751,283,665,383,479,567,264,166,68,16,359,541,448,1054,632,1001,815]; %最早开始时间
% cus.latet = [967,870,146,782,67,702,225,324,605,410,505,721,92,620,429,528,148,254,345,73,965,883,777,144,224,701,316,593,405,504,237,100,158,816,344,716,434,522,624,321,235,149,80,412,600,509,1127,693,1066,880]; %最晚开始时间
% cus.servicet =[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90];%服务时间
% %50-C201
% cus.xc = [52,45,62,60,42,16,58,34,28,35,35,25,22,22,20,20,18,15,15,30,30,28,14,25,22,8,23,4,20,20,10,10,8,8,5,5,2,0,0,36,35,33,33,32,30,34,30,36,48,26];%x坐标
% cus.yc = [75,70,69,66,65,42,70,60,70,66,69,85,75,85,80,85,75,75,80,50,56,52,66,50,66,62,52,55,50,55,35,40,40,45,35,45,40,40,45,18,32,32,35,20,30,25,35,40,20,32];%y坐标
% cus.u= [10,30,10,10,10,20,20,20,10,10,10,20,30,10,40,40,20,20,10,10,20,20,10,10,40,10,10,20,10,10,20,30,40,20,10,10,20,30,20,10,10,20,10,10,10,30,10,10,10,10]; %初始需求miu
% cus.earlyt= [311,213,1167,1261,25,497,1073,2887,2601,2791,2698,2119,2405,2026,2216,1934,2311,1742,1837,10,2983,22,1643,116,2504,1545,209,1447,398,303,781,593,685,1346,876,1253,971,1063,1158,1819,2758,2666,2573,1913,105,2009,2480,2856,967,2292]; %最早开始时间
% cus.latet = [471,373,1327,1421,185,657,1233,3047,2761,2951,2858,2279,2565,2186,2376,2094,2471,1902,1997,170,3143,182,1803,276,2664,1705,369,1607,558,463,941,753,845,1506,1036,1413,1131,1223,1318,1979,2918,2826,2733,2073,2265,2169,2640,3016,1127,2452]; %最晚开始时间
% cus.servicet =[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90];%服务时间
% %50-R101
% cus.xc = [41,35,55,55,15,25,20,10,55,30,20,50,30,15,30,10,5,20,15,45,45,45,55,65,65,45,35,41,64,40,31,35,53,65,63,2,20,5,60,40,42,24,23,11,6,2,8,13,6,47];%x坐标
% cus.yc = [49,17,45,20,30,30,50,43,60,60,65,35,25,10,5,20,30,40,60,65,20,10,5,35,20,30,40,37,42,0,52,69,52,55,65,60,20,5,12,25,7,12,3,14,38,48,56,52,68,47];%y坐标
% cus.u= [10,7,13,19,26,3,5,9,16,16,12,19,23,20,8,19,2,12,17,9,11,18,29,3,6,17,16,16,9,21,27,23,11,14,8,5,8,16,31,9,5,5,7,18,16,1,27,36,30,13]; %初始需求miu
% cus.earlyt= [161,50,116,149,34,99,81,95,97,124,67,63,159,32,61,75,157,87,76,126,62,97,68,153,172,132,37,39,63,71,50,141,37,117,143,41,134,83,44,85,97,31,132,69,32,117,51,165,108,124]; %最早开始时间
% cus.latet = [171,60,126,159,44,109,91,105,107,134,77,73,169,42,71,85,167,97,86,136,72,107,78,163,182,142,47,49,73,81,60,151,47,127,153,51,144,93,54,95,107,41,142,79,42,127,61,175,118,134]; %最晚开始时间
% cus.servicet =[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10];%服务时间
% %50-R201
% cus.xc = [41,35,55,55,15,25,20,10,55,30,20,50,30,15,30,10,5,20,15,45,45,45,55,65,65,45,35,41,64,40,31,35,53,65,63,2,20,5,60,40,42,24,23,11,6,2,8,13,6,47];%x坐标
% cus.yc = [49,17,45,20,30,30,50,43,60,60,65,35,25,10,5,20,30,40,60,65,20,10,5,35,20,30,40,37,42,0,52,69,52,55,65,60,20,5,12,25,7,12,3,14,38,48,56,52,68,47];%y坐标
% cus.u= [10,7,13,19,26,3,5,9,16,16,12,19,23,20,8,19,2,12,17,9,11,18,29,3,6,17,16,16,9,21,27,23,11,14,8,5,8,16,31,9,5,5,7,18,16,1,27,36,30,13]; %初始需求miu
% cus.earlyt= [707,143,527,678,34,415,331,404,400,577,206,228,690,32,175,272,733,377,269,581,214,409,206,704,817,588,104,114,190,259,152,660,45,529,686,41,606,302,33,360,396,25,620,233,29,515,85,773,501,547]; %最早开始时间
% cus.latet = [848,282,584,801,209,514,410,481,497,632,325,345,827,243,300,373,870,434,378,666,331,494,325,847,956,667,255,255,313,354,275,777,200,614,813,208,693,405,224,437,511,172,705,340,189,628,250,906,540,642]; %最晚开始时间
% cus.servicet =[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10];%服务时间
% %50-RC101
% cus.xc = [25,22,22,20,20,18,15,15,10,10,8,8,5,5,2,0,0,44,42,42,40,40,38,38,35,95,95,92,90,88,88,87,85,85,67,65,65,62,60,60,58,55,55,55,20,18,2,42,42,72];%x坐标
% cus.yc = [85,75,85,80,85,75,75,80,35,40,40,45,35,45,40,40,45,5,10,15,5,15,5,15,5,30,35,30,35,30,35,30,25,35,85,85,82,80,80,85,75,80,85,82,82,80,45,5,12,35];%y坐标
% cus.u= [20,30,10,40,20,20,20,10,20,30,40,20,10,10,20,20,20,20,40,10,10,40,30,10,20,30,20,10,10,10,20,10,10,30,20,40,10,30,10,30,20,10,20,10,10,10,10,10,10,30]; %初始需求miu
% cus.earlyt= [145,50,109,141,41,95,79,91,91,119,59,64,142,35,58,72,149,87,72,122,67,92,65,148,154,115,62,62,67,74,61,131,51,111,139,43,124,75,37,85,92,33,128,64,37,113,45,151,104,116]; %最早开始时间
% cus.latet = [175,80,139,171,71,125,109,121,121,149,89,94,172,65,88,102,179,117,102,152,97,122,95,178,184,145,92,92,97,104,91,161,81,141,169,73,154,105,67,115,122,63,158,94,67,143,75,181,134,146]; %最晚开始时间
% cus.servicet =[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10];%服务时间
% %50-RC201
% cus.xc = [25,22,22,20,20,18,15,15,10,10,8,8,5,5,2,0,0,44,42,42,40,40,38,38,35,95,95,92,90,88,88,87,85,85,67,65,65,62,60,60,58,55,55,55,20,18,2,42,42,72];%x坐标
% cus.yc = [85,75,85,80,85,75,75,80,35,40,40,45,35,45,40,40,45,5,10,15,5,15,5,15,5,30,35,30,35,30,35,30,25,35,85,85,82,80,80,85,75,80,85,82,82,80,45,5,12,35];%y坐标
% cus.u= [20,30,10,40,20,20,20,10,20,30,40,20,10,10,20,20,20,20,40,10,10,40,30,10,20,30,20,10,10,10,20,10,10,30,20,40,10,30,10,30,20,10,20,10,10,10,10,10,10,30]; %初始需求miu
% cus.earlyt= [673,152,471,644,73,388,300,367,371,519,195,223,653,35,174,255,703,335,254,537,215,375,201,681,784,529,146,149,194,246,165,621,80,487,657,43,557,278,64,329,376,33,574,217,37,489,105,732,440,507]; %最早开始时间
% cus.latet = [793,272,591,764,193,508,420,487,491,639,315,343,773,155,294,375,823,455,374,657,335,495,321,801,904,649,266,269,314,366,285,741,200,607,777,163,677,398,184,449,496,153,694,337,157,609,225,852,560,627]; %最晚开始时间
% cus.servicet =[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10];%服务时间
% %75-C101
% %75-C201
% %75-R101
% %75-R201
% %75-RC101
% %75-RC201






chrosmosome = {zeros(25)};%+++++++++++++++++++
chrosmosome = repmat(chrosmosome,1,100);%染色体表示法=.=，行是路线，列是路线上的客户―+++++++++
subp=init_weights(99, 20, 2);%++++++++99，20，2

pe = 0.2;%早到
%pee = 0.3;%晚到

ccc = 0;


popsize = 100;
Qt = zeros(1,100);%记录故障时间
carnum = zeros(1,popsize);%记录车辆数



for j = 1 : popsize%――――――――――――初始化种群――――――――――――――――――――――
    cus.randemand = zeros(25);
    cus.sigma = zeros(25);
    cus.sigma = (1/3*cus.u).*rand;
    cus.randemand = abs(floor(normrnd(cus.u,cus.sigma)));%随机第1-n遍需求
    arr = randperm(25);
    count1 = 1;%加一条路线
    count2 = 1;%加一个节点
    capacitycount = 0;%记录判断容量约束
    nowtime = 0;%记录目前的时间----------------------------要改+.+
    for i = 1 : length(arr)
        capacitycount = capacitycount + cus.randemand(arr(i));
        if capacitycount<=200 && nowtime<=cus.latet(arr(i))
           if nowtime<cus.earlyt(arr(i))
               Qt(1,j) = Qt(1,j)+pe*(cus.earlyt(arr(i)) - nowtime);%记录故障等待时间
           %elseif nowtime>cus.latet(arr(i))
               %Qt = Qt+pee*(nowtime - cus.latet(arr(i)) );%记录故障等待时间
           end        
           chrosmosome{1,j}(count1,count2) = arr(i);%将客户加入到路线中
           nowtime = cus.earlyt(arr(i)) + 10;%现在的时间%-------------------------------------------------------------
           count2 = count2+1;
        else
            capacitycount = cus.randemand(arr(i));
            nowtime = 0;
            count1 = count1 + 1;
            count2 = 1;
            chrosmosome{1,j}(count1,count2) = arr(i);%将客户加入到新路线中
            if nowtime<cus.earlyt(arr(i)) 
               Qt(1,j) = Qt(1,j)+cus.earlyt(arr(i)) - nowtime;%记录故障等待时间
            end  
            nowtime = cus.earlyt(arr(i)) + 10;%现在的时间-------------------------------------------------------------------
            count2 = count2+1;
        end
    end
    carnum(1,j) = count1;
end%――――――――――――――――――――――――――――――――




% %每条染色体的每条路线都要算出来
% % distancefee = {zeros(25,10)};
% % distancefee = repmat(distancefee,1,100);
 distancefee = zeros(100,10);
% %持续时间
 timespan = zeros(1,100);
 remuneration = zeros(1,100);
% %司机报酬
% 
% %Qt = zeros(1,100);%记录故障时间
% Qd = zeros(1,100);%记录故障时间

%RSM评价目标值方法
for i = 1 : popsize    
    [dis,tim,remu,count1] = rsm2(chrosmosome,cus,i);
    distancefee(i,:) = dis;
    timespan(1,i) = tim;
    remuneration(1,i) = remu;
    carnum(1,i) = count1-1;
end

%  mop = testmop('zdt1',30);
%  pareto = moead( mop, 'popsize', 100, 'niche', 20, 'iteration', 200, 'method', 'te');


idealz = zeros(2);%存放参考点

idealz(1,2) = min(distancefee(:,1));%第一个目标的最小值及所在染色体
idealz(1,1) = find(distancefee(:,1) == min(distancefee(:,1)));
    
idealz(2,2) = min(remuneration);%第二个目标的最小值及所在染色体
idealz(2,1) = find(remuneration == min(remuneration));



%subp一共101个结构体，每个结构体都有权值向量，维度为2
%每一对权值向量都有20个邻域（最近的权值向量）存放在subp的neighbour里，这个是竖排的
%初始化染色体1-100，放在chrosmosome里
%用RSM估计目标值：一个目标存在remuneration（1-100）里了，另一个目标存在distancefee里了
%初始化idealz参考点，存放的是两个目标的最小值及所在染色体的位置
%然后就要开始第二部分了。。。。
%对于所有种群 i = 1：100
%交叉变异初步完成，更新参考点，感觉这一步有点问题，因为目标小的都是很零散的节点，要不要在前面就合并最短路径？？？？？
%



elasticrate = 0.5;
squeezerate = 0.5;
shufflerate = 0.3;



child = chrosmosome;

%   child = child1;

for w = 1:50
FV = cell(100,3);
for i = 1:100
    c = randperm(20);
    parent1 = subp(1,i).neighbour(c(1),1);%在每个染色体中邻域中选两个来做种群的父母----标号
    parent2 = subp(1,i).neighbour(c(2),1);
    
    %汉明距离
    d = pdist2(child{1,parent2},child{1,parent1},'hamming');
    e = d(1:15,1:15);
    f = find(e == 0);
    
    if w<2 
        %自适应-----两个相似度差异大的进行接下来的交叉变异
        while corr2(child{1,parent2}(1:20,1:20),child{1,parent1}(1:20,1:20))>0.5 || length(f)>5
            c = randperm(20);
            parent1 = subp(1,i).neighbour(c(1),1);%在每个染色体中邻域中选两个来做种群的父母----标号
            parent2 = subp(1,i).neighbour(c(2),1);

            d = pdist2(child{1,parent2},child{1,parent1},'hamming');
            e = d(1:9,1:9);
            f = find(e == 0);
        end
    end
    %――――――――――――――――――――――交叉变异――――――――――――――――――――――――

    if rand()<elasticrate
        %部分交换%交叉        
        
        a = randperm(carnum(1,parent1));%父母1随机选择一条路线1
        b = randperm(carnum(1,parent2));%父母2随机选择一条路线2  
       
                             
        child{1,parent1} = [child{1,parent2}(b(1),:);child{1,parent1}];%交叉完成没有删除重复元素
       % child{1,parent1}(25,:) = [];
        child{1,parent2} = [child{1,parent1}(a(1),:);child{1,parent2}];%这两条路线都是加到了第一行
      %  child{1,parent2}(25,:) = [];
        %删除重复值
        numm = zeros(1,25);%临时存放个体看看有没有重复的------父母1处理--------------------------------
        j =1;
        count1 = 1;
        count2 = 1;
        count3 = 1;
        while count1<carnum(1,parent1)+5
            %disp(count1);
            temp = child{1,parent1}(count1,count2);
            if temp ~= 0
                if any(numm == temp)%判断有没有重复值，有的话后面的元素前移
                    child{1,parent1}(count1,count2:24) = child{1,parent1}(count1,(count2+1):25);                    
                else
                    numm(1,j) = temp;
                    j = j + 1;
                    count2 = count2 + 1;
                end                
                count3 = count3 + 1;
            else
                count1 = count1 + 1;
                count2 = 1;
            end
        end
        numm = zeros(1,25);%临时存放个体看看有没有重复的------父母2处理------------------------------------
        j =1;
        count1 = 1;
        count2 = 1;
        count3 = 1;
        while count1<=(carnum(1,parent2)+5)
            temp = child{1,parent2}(count1,count2);
            if temp ~= 0
                if any(numm == temp)%判断有没有重复值，有的话后面的元素前移
                    child{1,parent2}(count1,count2:24) = child{1,parent2}(count1,(count2+1):25);                    
                else
                    numm(1,j) = temp;
                    j = j + 1;
                    count2 = count2 + 1;
                end                
                count3 = count3 + 1;
            else
                count1 = count1 + 1;
                count2 = 1;
            end
        end
        %去掉全零行
        for q = 1 : 3
            for k = 1:20
                if child{1,parent1}(k,1) == 0 && child{1,parent1}(k+1,1) ~= 0
                     child{1,parent1}(k:19,:) = child{1,parent1}(k+1:20,:); 
                end
                if child{1,parent2}(k,1) == 0 && child{1,parent2}(k+1,1) ~= 0
                     child{1,parent2}(k:19,:) = child{1,parent2}(k+1:20,:); 
                end
            end
        end
    end
    if rand()<squeezerate
        %――――――――――――――――――――合并最短路线――――――――――――――――――
               
        c = 0;%--------------------------处理1
        for k = 1:20
            if c>0 && child{1,parent1}(k,1) ~= 0 && child{1,parent1}(k,2) == 0
                c = c+1;
                child{1,parent1}(temp,c) = child{1,parent1}(k,1);
                child{1,parent1}(k,:) = 0;
            elseif c == 0 && child{1,parent1}(k,1) ~= 0 && child{1,parent1}(k,2) == 0%一条路线上只有一个节点
                 c = 1;
                 temp = k;
            end            
        end
        c = 0;%--------------------------处理2
        for k = 1:20
            if c>0 && child{1,parent2}(k,1) ~= 0 && child{1,parent2}(k,2) == 0
                c = c + 1;
                child{1,parent2}(temp,c) = child{1,parent2}(k,1);
                child{1,parent2}(k,1) = 0;
            elseif c == 0 && child{1,parent2}(k,1) ~= 0 && child{1,parent2}(k,2) == 0%一条路线上只有一个节点
                 c = 1;
                 temp = k;
            end            
        end
        %------------------------------去掉全零行
        for q = 1:10
            for k = 1:20
                if child{1,parent1}(k,1) == 0 && child{1,parent1}(k+1,1) ~= 0
                     child{1,parent1}(k:20,:) = child{1,parent1}(k+1:21,:); 
                end
                if child{1,parent2}(k,1) == 0 && child{1,parent2}(k+1,1) ~= 0
                     child{1,parent2}(k:20,:) = child{1,parent2}(k+1:21,:); 
                end
            end
        end
    end%――――――――――――――――――――――――――――――――――――――
    
    if rand()<shufflerate
        %---------------------------------------------随机洗牌---------------------------------------------
        
    end
    
    %――――――――――更新参考点z――――――――――――――
    
    [dis1,tim1,remu1,count1] = rsm2(child,cus,parent1);
    if idealz(1,2) > dis1(1,1) && idealz(2,2) > remu1
        idealz(1,2) = dis1(1,1);
        idealz(2,2) = remu1;
        idealz(1,1) = parent1;
        idealz(2,1) = parent1;
    %    disp(idealz);
    end
    [dis2,tim2,remu2,count2] = rsm2(child,cus,parent2);
    if idealz(1,2) > dis2(1,1) && idealz(2,2) > remu2
        idealz(1,2) = dis2(1,1);
        idealz(2,2) = remu2;
        idealz(1,1) = parent2;
        idealz(2,1) = parent2;
%         disp(idealz);
    end
    %―――――――――――――――――――――――――――――
    
    if dis1(1,1) < dis2(1,1) && remu1 < remu2
        temp1 = dis1(1,1);
        temp2 = remu1;
    elseif  dis1(1,1) > dis2(1,1) && remu1 > remu2
        temp1 = dis2(1,1);
        temp2 = remu2;
    else
        temp1 = 0;
        temp2 = 0;
    end
    
    if temp1==0 && temp2==0
        continue;
    end
    %―――――――――更新邻域解――――――――――――――――
    %就是在parent1和2的邻域范围内的每一个个体-----20个
    %
    for j = 1:20
        parent = subp(1,i).neighbour(j,1);%在种群的邻域中的标号1-20
        weight1 = subp(1,parent).weight(1,1);%标号的权重
        weight2 = subp(1,parent).weight(2,1);
        if weight1 == 0;
            weight1 = 0.00001;
        elseif weight2 == 0;
            weight2 = 0.00001;
        end
%         [dis1,tim1,remu1,count1] = rsm2(child,cus,parent);  %20个每个轮一遍
        [dis,tim,remu,count3] = rsm2(child,cus,i);%一直不变
        part1 = abs(temp1-idealz(1,2));      
        part2 = abs(temp2-idealz(2,2));
        part3 = abs(dis(1,1)-idealz(1,2)); %种群的个体  i     
        part4 = abs(remu-idealz(2,2));
        if max(weight1*part1,weight2*part2)<=max(weight1*part3,weight2*part4)
            %把前面的给后面
%             if  isempty(FV{i,1})
%                 FV{i,1} = child{1,parent};
%                 FV{i,2} = temp1;
%                 FV{i,3} = temp2;
%                 ccc = ccc + 1;
%             end
%             if FV{i,2} > temp1 && FV{i,3} > temp2
                child{1,i} =  child{1,parent}; 
                FV{i,1} = child{1,i};
                FV{i,2} = temp1;
                FV{i,3} = temp2;
                ccc = ccc + 1;
%             end
            
        end
    end   
    
    %――――――――――――――――――――――――――――――
end



end

for i = 1:100
    if isempty(FV{i,1})
        FV{i,1} = child{1,i};
        [dis2,tim2,remu2,count2] = rsm2(child,cus,i);
        FV{i,2} = dis2(1,1);
        FV{i,3} = remu2;
    end
end





% childchild = child1(1,1:50);
% child1(1,1:50) = child2(1,51:100);
% child2(1,51:100) = child3(1,1:50);
% child3(1,1:50) = child4(1,1:50);
% child4(1,1:50) = childchild;

%再分别让child1-4迭代五代

% childchild = {child1;child2;child3;child4};

% % % 
%SP==算是失败吧==
% FV1 = FV(:,2:3);
% FV1 = cell2mat(FV1);
% FV1 = unique(FV1,'rows');
% n = length(FV1);
% d = zeros(1,20);
% e = zeros(1,n-1);
% 
% for i = 1 : n-1
%     d = zeros(1,20);
%     for j = 1:20        
%         temp = subp(1,i).neighbour(j,1);
%         if temp>n
%             d(j) = e(i-1);
%         else
%             d(j) = abs(FV1(i,1)-FV1(temp,1))+abs(FV1(i,2)-FV1(temp,2));
%         end
%     end
%     e(i) = min(d(1,2:20));
% end
% 
% summ1 = 0;
% for i = 1:n-1
%     summ1 = summ1 + e(i)*e(i);
% end
% 
% GD = sqrt(summ1)/(n-1);
% 
% ee = e<50;
% eee = zeros(1,30);
% t = 1;
% for i  = 1:n-1
%     if ee(i) == 1
%         eee(1,t) = e(i);
%         t = t + 1;
%     end
% end
% 
% n = t;
% 
% summ = 0;
% avg = mean(eee(1,1:t-1));
% for i = 1:n-1
%     summ = summ + (avg-eee(1,i))*(avg-eee(1,i));
% end
% 
% S = sqrt(summ/(n-1));
% 
% 
% %算标准差
% min(FV1(:,1))
% max(FV1(:,1))
% min(FV1(:,2))
% max(FV1(:,2))
% avg1 = mean(FV1(:,2));
% avg2 = mean(FV1(:,1));







